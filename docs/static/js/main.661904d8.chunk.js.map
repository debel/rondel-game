{"version":3,"sources":["orders.js","tiles.js","player.js","PlayerStats.js","OrdersMarket.js","TilesMarket.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["foodTypes","chooseRandomFood","Math","floor","random","createOrder","id","min","max","itemCount","Array","from","reduce","result","foodType","foods","points","money","createOrdersLine","orders","_","i","currentOrders","filter","o","discardOrder","length","defaultOrdersLine","playerHasFoodForOrder","playerFoods","order","Object","entries","map","amount","every","hasFoodType","gainFood","player","numberOfMeeples","Promise","resolve","multipleChoice","tile","options","a","async","selectAction","option","action","catch","error","alert","activate","gainSelectedFoodExcept","forbiddenFood","selectFood","then","sellAFood","loseFood","gainMoney","emptyTile","icon","title","description","type","cost","position","playerState","fancyTiles","this","baseTiles","hasAnyFood","Error","currentMoney","some","canBuy","selectTile","loseMoney","placeTile","currentFood","canFulfil","selectOrder","selectedOrder","fulfilOrder","name","text","selectPosition","firstPosition","secondPosition","swapTiles","SELECTING_OPTIONS","randomizeBoard","board","n","allValues","selectedIndex","selected","splice","push","generateRandomSequence","j","x","createPlayer","ordersLine","tileMarket","modifiers","sushi","noodles","tea","totalFood","isSelecting","setState","notifyOnMove","resolveSelect","initiateSelect","reject","value","onSetState","setter","gainPoints","callModifiers","call","currentScore","currentBoard","currentPosition","onMove","cb","move","target","finally","foodItems","forEach","position1","position2","t1","t2","selectedTile","selectedPosition","undefined","uiSelection","stats","symbol","PlayerStats","props","playerStats","statName","statElement","onClick","onSelectFood","class","keys","Order","onSelect","Orders","MarketTile","tileProps","TilesMarket","className","index","bucket","row","fT","Board","tiles","orderTilesInGrid","onPlaceTile","p1","ActionOptions","forceRefresh","App","React","useState","turns","setTurns","setX","setIsSelecting","actionOptions","setActionOptions","selector","useEffect","t","state","OrdersMarket","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mPAAMA,EAAY,CAAC,QAAS,UAAW,OAEjCC,EAAmB,kBAAMD,EAAUE,KAAKC,MAAsB,EAAhBD,KAAKE,YAE5CC,EAAc,SAACC,GAA0B,IAAtBC,EAAqB,uDAAf,EAAGC,EAAY,uDAAN,EACrCC,EAAYP,KAAKC,MAAMD,KAAKE,UAAYI,EAAM,IAAMD,EAE1D,OAAOG,MAAMC,KAAK,IAAID,MAAMD,GAAYR,GAAkBW,QAAO,SAACC,EAAQC,GAOtE,OANKD,EAAOE,MAAMD,KACdD,EAAOE,MAAMD,GAAY,GAG7BD,EAAOE,MAAMD,IAAa,EAEnBD,IACR,CAAEP,KAAIS,MAAO,GAAIC,OAAQ,GAAIP,EAAW,GAAK,EAAGQ,MAAOf,KAAKK,IAAIE,EAAY,EAAG,MAGhFS,EAAmB,WAAW,wDAAC,IAC7BC,EAAST,MAAMC,KAAK,IAAID,MAAM,IAAI,SAACU,EAAGC,GAAJ,OAAUhB,EAAYgB,MAE9D,MAAO,CACLC,cADK,WAEH,OAAO,YAAIH,GAAQI,QAAO,SAAAC,GAAC,OAAIA,MAEjCC,aAJK,SAIQnB,UACJa,EAAOb,GACda,EAAOA,EAAOO,QAAUrB,EAAYc,EAAOO,WAOpCC,EAAoBT,IAEpBU,EAAwB,SAACC,EAAaC,GAAd,OAAwBC,OAAOC,QAAQF,EAAMf,OACjFkB,KAAI,mCAAEnB,EAAF,KAAYoB,EAAZ,YAAwBL,EAAYf,IAAaoB,KACrDC,OAAM,SAAAC,GAAW,OAAoB,IAAhBA,MCpChBC,EAAW,SAAAvB,GAAQ,OAAI,SAACwB,GAAiC,IAAzBC,EAAwB,uDAAN,EACtD,OAAOC,QAAQC,QAAQH,EAAOD,SAASvB,EAAUyB,MAG7CG,EAAiB,SAAOC,EAAML,EAAQM,GAArB,SAAAC,EAAAC,OAAA,yEACdR,EAAOS,aAAaH,EAAQX,KAAI,SAAAe,GAAM,sBACxCA,EADwC,CAChCC,OADgC,WACrB,OAAOD,EAAOC,SAASC,OAAM,SAAAC,GAE/C,OADAC,MAAMD,GACCR,EAAKU,SAASf,cAJN,sCAUjBgB,EAAyB,SAACC,EAAeZ,EAAML,GAAiC,IAAzBC,EAAwB,uDAAN,EAC7E,OAAOD,EAAOkB,YAAW,GACtBC,MAAK,YAA2B,IAAxB3C,EAAuB,EAAvBA,SAAuB,EAAboB,OACjB,OAAIpB,IAAayC,GACfH,MAAM,eAAD,OAAgBG,EAAhB,UACEZ,EAAKU,SAASf,EAAQC,IAExBD,EAAOD,SAASvB,EAAUyB,OAIjCmB,EAAY,SAACpB,GAAD,IAASC,EAAT,uDAA2B,EAA3B,OAAiCD,EAAOkB,aAAaC,MAAK,gBAAG3C,EAAH,EAAGA,SAAUoB,EAAb,EAAaA,OAAb,OAC1EI,EAAOqB,SAAS7C,EAAUoB,GACvBuB,MAAK,kBAAMnB,EAAOsB,UAAU1B,EAASK,UAG7BsB,EAAY,CACvBC,KAAM,GACNC,MAAO,GACPC,YAAa,GACbC,KAAM,EACNC,KAAM,EACNC,SAAU,IACVd,SAPuB,SAOde,EAAa7B,MAGX8B,EAAa,CACxB,CACEP,KAAM,8BACNC,MAAO,iBACPC,YAAa,6BACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA8B,IAAtBC,EAAqB,uDAAH,EACjC,OAAOe,EAAuB,QAASgB,KAAMhC,EAAQC,KAGzD,CACEuB,KAAM,8BACNC,MAAO,eACPC,YAAa,2BACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA8B,IAAtBC,EAAqB,uDAAH,EACjC,OAAOe,EAAuB,UAAWgB,KAAMhC,EAAQC,KAG3D,CACEuB,KAAM,8BACNC,MAAO,mBACPC,YAAa,+BACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA8B,IAAtBC,EAAqB,uDAAH,EACjC,OAAOe,EAAuB,MAAOgB,KAAMhC,EAAQC,KAGvD,CACEuB,KAAM,2BACNC,MAAO,cACPC,YAAa,cACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA8B,IAAD,OAArBC,EAAqB,uDAAH,EACjC,OAAOmB,EAAUpB,EAAQC,GACtBkB,MAAK,kBAAMC,EAAUpB,EAAQC,MAC7BW,OAAM,SAACC,GACN,OAAO,EAAKE,SAASf,QAI7B,CACEwB,KAAM,sDACNC,MAAO,GACPC,YAAa,GACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA6B,wDACpC,OAAOI,EAAe4B,KAAMhC,EAAQ,CAClC,CAAEwB,KAAM,qBAAOb,OAAf,WAA0B,OAAOsB,EAAU,GAAGlB,SAASf,KACvD,CAAEwB,KAAM,iCAASb,OAAjB,WAA4B,OAAOsB,EAAU,GAAGlB,SAASf,SAI/D,CACEwB,KAAM,iCACNC,MAAO,GACPC,YAAa,GACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA6B,wDACpC,OAAOiC,EAAU,GAAGlB,SAASf,GAC1BY,OAAM,SAACC,GAAYC,MAAMD,MACzBM,MAAK,kBAAMc,EAAU,GAAGlB,SAASf,QAGxC,CACEwB,KAAM,iCACNC,MAAO,GACPC,YAAa,GACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA6B,wDACpC,OAAOiC,EAAU,GAAGlB,SAASf,GAC1BY,OAAM,SAACC,GAAYC,MAAMD,MACzBM,MAAK,kBAAMc,EAAU,GAAGlB,SAASf,QAGxC,CACEwB,KAAM,oCACNC,MAAO,eACPC,YAAa,4CACbC,KAAM,EACNC,KAAM,EACNb,SANF,SAMWf,GAA6B,wDACpC,OAAOI,EAAe4B,KAAMhC,EAAQ,CAClC,CAAEwB,KAAM,qBAAOb,OAAf,WAA0B,OAAOsB,EAAU,GAAGlB,SAASf,KACvD,CAAEwB,KAAM,eAAMb,OAAd,WAAyB,OAAOsB,EAAU,GAAGlB,SAASf,SAI5D,CACEwB,KAAM,uCACNC,MAAO,GACPC,YAAa,GACbC,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,GANjB,iHAM2C,EACvCD,EAAS,QAATA,CAAkBC,GAClBD,EAAS,UAATA,CAAoBC,GACpBD,EAAS,MAATA,CAAgBC,GATpB,wCAcIiC,EAAY,CAChB,CACET,KAAM,eACNC,MAAO,QACPC,YAAa,kBACbC,KAAM,EACNC,KAAM,EACNb,SAAUhB,EAAS,UAErB,CACEyB,KAAM,eACNC,MAAO,UACPC,YAAa,oBACbC,KAAM,EACNC,KAAM,EACNb,SAAUhB,EAAS,YAErB,CACEyB,KAAM,eACNC,MAAO,MACPC,YAAa,mBACbC,KAAM,EACNC,KAAM,EACNb,SAAUhB,EAAS,QAErB,CACEyB,KAAM,eACNC,MAAO,UACPC,YAAa,sBACbC,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,GANjB,8FAMyBC,EANzB,+BAM2C,EAClCD,EAAOkC,aAPhB,sBAOsC,IAAIC,MAAM,mBAPhD,gCASWnC,EAAOkB,aAAaC,MAAK,gBAAG3C,EAAH,EAAGA,SAAUoB,EAAb,EAAaA,OAAb,OAC9BI,EAAOqB,SAAS7C,EAAUoB,GACvBuB,MAAK,kBAAMnB,EAAOsB,UAAU1B,EAASK,MACrCW,OAAM,SAACC,GAEN,OADAC,MAAMD,GACC,EAAKE,SAASf,UAd/B,uCAmBA,CACEwB,KAAM,iCACNC,MAAO,OACPC,YAAa,6BACbC,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,EAAQC,GANzB,yEAOIa,MAAM,QAPV,mBAQW,GARX,uCAWA,CACEU,KAAM,qBACNC,MAAO,UACPC,YAAa,sCACbC,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,EAAQC,GANzB,gFAOwB8B,EACjBpC,KAAI,SAAAU,GAAI,OAAIL,EAAOoC,gBAAkB/B,EAAKuB,QAC1CS,MAAK,SAAAC,GAAM,OAAe,IAAXA,KATtB,sBAYY,IAAIH,MAAM,2BAZtB,gCAeWnC,EAAOuC,aACXpB,MAAK,SAAAd,GAAI,OAAIL,EAAOwC,UAAUnC,EAAKuB,MACjCT,MACC,kBAAMnB,EAAOyC,UAAUpC,MACvB,SAACQ,GAED,OADAC,MAAMD,GACC,EAAKE,SAASf,UArB/B,uCA0BA,CACEwB,KAAM,qBACNC,MAAO,SACPC,YAAa,kBACbC,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,GANjB,2HAM2C,EACfX,EAAkBL,gBACzCW,KAAI,SAAAH,GAAK,OAAIF,EAAsBU,EAAO0C,cAAelD,MACzD6C,MAAK,SAAAM,GAAS,OAAkB,IAAdA,KATvB,sBAWkC,IAAIR,MAAM,sCAX5C,gCAaWnC,EAAO4C,cACXzB,MAAK,SAAA0B,GAAa,OAAI7C,EAAO8C,YAAYD,KAAgB/B,OACzDF,OAAM,SAACC,GAEN,OADAC,MAAMD,GACC,EAAKE,SAASf,OAjB7B,uCAqBA,CACEwB,KAAM,eACNuB,KAAM,YACNC,KAAM,gCACNrB,KAAM,EACNC,KAAM,EACAb,SANR,SAMiBf,EAAQC,GANzB,2FAOWD,EAAOiD,iBACX9B,MAAK,SAAA+B,GAAa,OAAIlD,EAAOiD,iBAC3B9B,MAAK,SAAAgC,GAAc,OAAInD,EAAOoD,UAAUF,EAAeC,UAThE,wCAcalB,ICvQFoB,EACL,OADKA,EAEL,OAFKA,EAGD,WAHCA,EAIJ,QAJIA,EAKH,SAgBJC,EAAiB,WACrB,IACMC,EAfuB,WAI7B,IAJyC,IAAXC,EAAU,uDAAN,EAC5BC,EAAYrF,MAAMC,KAAK,IAAID,MAAMoF,IAAI,SAAC1E,EAAGC,GAAJ,OAAUA,KAC/CR,EAAS,GAENQ,EAAI,EAAGA,EAAIyE,EAAGzE,GAAK,EAAG,CAC7B,IAAM2E,EAAgB9F,KAAKC,MAAMD,KAAKE,SAAW2F,EAAUrE,QACrDuE,EAAWF,EAAUG,OAAOF,EAAe,GAAG,GACpDnF,EAAOsF,KAAKF,GAGd,OAAOpF,EAIUuF,CAAuB7B,EAAU7C,QAC3BO,KAAI,SAACZ,EAAGgF,GAAJ,sBAAgB9B,EAAUlD,GAA1B,CAA8B8C,SAAUkC,OAEnE,OADAR,EAAMS,EAAIzC,EACHgC,GAwJMU,EArJM,SAAClB,EAAMmB,EAAYC,GACtC,IAAMZ,EAAQD,IACRc,EAAY,GACZ3F,EAAQ,CAAE4F,MAAO,EAAGC,QAAS,EAAGC,IAAK,GACvCC,EAAY,EACZ3C,EAAW,EACXlD,EAAQ,EACRD,EAAS,EACT+F,EAAc,KACdC,EAAW,aACXC,EAAe,aACfC,EAAgB,KACdC,EAAiB,SAAClD,EAAMrB,GAAP,OAAmB,IAAIJ,SAAQ,SAACC,EAAS2E,GAC9DL,EAAc9C,EACd+C,EAAS,CAAE/C,OAAMrB,YACjBsE,EAAgB,SAACG,GAIf,OAHAN,EAAc,KACdG,EAAgB,KAChBF,EAAS,MACFvE,EAAQ4E,QAInB,MAAO,CACLC,WADK,SACMC,GACTP,EAAWO,GAEb3D,UAJK,SAIK1B,GAAUjB,GAASiB,GACvB4C,UALD,SAKW5C,GALX,uEAMCjB,EAAQiB,GANT,sBAMyB,IAAIuC,MAAM,oBANnC,OAQHxD,GAASiB,EARN,sCAULsF,WAVK,SAUMtF,GAAUlB,GAAUkB,GAC/BG,SAXK,SAWI4B,EAAM/B,GAA+B,IAAvBuF,IAAsB,yDACtC1G,EAAMkD,KACTlD,EAAMkD,GAAQ,GAGZwD,GAAiBf,EAAS,UAC5BA,EAAUrE,SAASqF,KAAKpD,KAAML,EAAM/B,GAGtCnB,EAAMkD,IAAS/B,EACf4E,GAAa5E,GAETyB,SAvBD,SAuBUM,EAAM/B,GAvBhB,qEAwBEnB,EAAMkD,MAASlD,EAAMkD,GAAQ/B,GAxB/B,sBAyBK,IAAIuC,MAAJ,qBAAwBR,IAzB7B,OA4BHlD,EAAMkD,IAAS/B,EACf4E,GAAa5E,EA7BV,sCA+BLsC,WA/BK,WAgCH,OAAOsC,EAAY,GAErBtD,WAlCK,WAmCH,OAAO2D,EAAexB,IAExBjB,aArCK,WAsCH,OAAOzD,GAET0G,aAxCK,WAyCH,OAAO3G,GAETgE,YA3CK,WA4CH,OAAO,eAAIjE,IAEb6G,aA9CK,WA+CH,OAAO/B,GAETgC,gBAjDK,WAkDH,OAAO1D,GAET2D,OApDK,SAoDEC,GACLd,EAAec,GAEjBC,KAvDK,SAuDAC,GAAS,IAAD,OACX,GAAIlB,EAAa,MAAM,IAAItC,MAAJ,iBAAoBsC,EAApB,WAMvB,GAJsB5C,EAAW,GAAMA,EAAW8D,GAAUA,EAAS9D,GAAY,GAChD,IAAbA,IAA8B,IAAX8D,GAA2B,IAAXA,IACpB,IAAb9D,IAA8B,IAAX8D,GAA2B,IAAXA,GAIvD,OADA9D,EAAW8D,EACJzF,QAAQC,UACZgB,MAAK,kBAAMoC,EAAMoC,GAAQ5E,SAAS,MAClC6E,QAAQjB,GAGb,MAAM,IAAIxC,MAAM,iBAEZS,YAvED,sGAwEIiC,EAAexB,IAxEnB,sCA0ECP,YA1ED,SA0EaD,GA1Eb,kFA2EGgD,EAAYpG,OAAOC,QAAQmD,EAAcpE,OAE1Ca,EAAsBb,EAAOoE,GA7E/B,sBA8ED4B,EAAc,KACR,IAAItC,MAAM,uBA/Ef,OAkFH0D,EAAUC,SAAQ,YAAqB,IAAD,mBAAlBnE,EAAkB,KAAZ/B,EAAY,KACpC,EAAKyB,SAASM,EAAM/B,MAGtBsE,EAAW/E,aAAa0D,EAAc7E,IACtCgE,KAAKkD,WAAWrC,EAAcnE,QAC9BsD,KAAKV,UAAUuB,EAAclE,OAC7B8F,EAAc,KAzFX,gDA2FCxB,eA3FD,sGA4FI4B,EAAexB,GAA4BlC,MAAK,SAAAU,GACrD,GAAiB,MAAbA,EAAoB,MAAM,IAAIM,MAAM,qCACxC,OAAON,MA9FN,sCAiGCuB,UAjGD,SAiGW2C,EAAWC,GAjGtB,0EAkGGC,EAAK1C,EAAMwC,GACXG,EAAK3C,EAAMyC,GAEjBC,EAAGpE,SAAWmE,EACdE,EAAGrE,SAAWkE,EAEdxC,EAAMwC,GAAaG,EACnB3C,EAAMyC,GAAaC,EAzGhB,sCA2GC1D,WA3GD,sGA4GIsC,EAAexB,IA5GnB,sCA8GCZ,UA9GD,SA8GW0D,GA9GX,2FA+GItB,EAAexB,GACnBlC,MAAK,SAACiF,GACL7C,EAAM6C,GAAN,eAA+BD,EAA/B,CAA6CtE,SAAUuE,IACvD1B,OAAS2B,OAlHV,sCAqHLC,YArHK,SAqHO3E,EAAMjB,GAChB,OAAOkE,EAAclE,IAEvBD,aAxHK,SAwHQH,GACX,OAAOuE,EAAexB,EAA0B/C,MC9KzCiG,EAAQ,CACnB5H,MAAO,CAAE6H,OAAQ,gBACjB9H,OAAQ,CAAE8H,OAAQ,UAClBnC,MAAO,CAAEmC,OAAQ,eAAM7E,KAAM,QAC7B2C,QAAS,CAAEkC,OAAQ,eAAM7E,KAAM,QAC/B4C,IAAK,CAAEiC,OAAQ,eAAM7E,KAAM,SAgCd8E,EA7BK,SAACC,GACnB,IAAMC,EAAclH,OAAOC,QAAPD,OAAA,IAAAA,CAAA,CAClBd,MAAO+H,EAAM1G,OAAOoC,eACpB1D,OAAQgI,EAAM1G,OAAOqF,gBAClBqB,EAAM1G,OAAO0C,gBACfpE,QAAO,SAACC,EAAD,GAAgC,IAAD,mBAArBqI,EAAqB,KAAX7B,EAAW,KAClCxG,EAAOwG,KACVxG,EAAOwG,GAAS,IAGlB,IAAM8B,EAAuC,SAAzBN,EAAMK,GAAUjF,KAChC,yBAAKmF,QAAS,kBAAMJ,EAAMK,cAAgBL,EAAMK,aAAa,CAAEvI,SAAUoI,EAAUhH,OAAQ,MAAO2G,EAAMK,GAAUJ,QAClH,6BAAMD,EAAMK,GAAUJ,QAI1B,OAFAjI,EAAOwG,GAAOlB,KAAKgD,GAEZtI,IACNH,MAAMC,KAAK,IAAID,MAAM,MAExB,OAAO,2BAAO4I,MAAM,gBAClB,4BACGvH,OAAOwH,KAAKN,GAAahH,KAAI,SAAAZ,GAAC,OAAI,4BAAK4H,EAAY5H,IAAM,QAE5D,4BACGU,OAAOwH,KAAKN,GAAahH,KAAI,SAAAZ,GAAC,OAAI,4BAAKA,SC9BxCmI,EAAQ,SAAC,GAAD,IAAGlJ,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQyI,EAAtB,EAAsBA,SAAUxI,EAAhC,EAAgCA,MAAhC,OACZ,yBAAKqI,MAAM,QAAQF,QAAS,kBAAMK,GAAYA,EAAS,CAAEnJ,KAAIS,QAAOC,SAAQC,YACzEc,OAAOC,QAAQjB,GAAOkB,KAAI,mCAAEgC,EAAF,KAAQ/B,EAAR,YAAoB,8BAAOA,EAAP,IAAgB2G,EAAM5E,GAAM6E,WAC3E,6BACA,6BAAM9H,EAAN,IAAe6H,EAAM7H,OAAO8H,OAA5B,KAAsC7H,EAAtC,IAA8C4H,EAAM5H,MAAM6H,UAU/CY,EANA,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAH,OACb,6BACG9H,EAAkBL,gBAAgBW,KAAI,SAAAT,GAAC,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAeiI,SAAUA,U,OCDnEE,EAAa,SAAC,GAAD,IAAG7F,EAAH,EAAGA,KAAMI,EAAT,EAASA,KAAMF,EAAf,EAAeA,YAAcyF,EAA7B,EAA6BA,SAAaG,EAA1C,+DACjB,wBAAIN,MAAM,cAAcF,QAAS,kBAAMK,GAAYA,EAAS,aAAE3F,OAAMI,QAAS0F,MAC1E9F,EAAK,6BAAK,sCAAYI,EAAZ,gBAAyB,yBAAKoF,MAAM,WAAWtF,KAW/C6F,EAPK,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAAmB,2BAAOK,UAAU,2BAhBjCzF,EAAWzD,QAAO,SAACC,EAAQ8B,EAAMoH,GACtD,IAAMC,EAASrH,EAAKsB,MAAQ,EAM5B,OALKpD,EAAOmJ,KACVnJ,EAAOmJ,GAAU,IAGnBnJ,EAAOmJ,GAAQ7D,KAAKxD,GACb9B,IACN,IASWoB,KAAI,SAAAgI,GAAG,OAAI,4BACpBA,EAAIhI,KAAI,SAAAiI,GAAE,OAAI,kBAAC,EAAD,iBAAgBA,EAAhB,CAAoBT,SAAUA,cCOlCU,EApBD,SAACnB,GAAD,OACZ,2BAAOM,MAAM,gBAPU,SAACc,GAAD,MAAY,CACnC,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC3B,CAACA,EAAM,GAAIA,EAAM9D,EAAI8D,EAAM,IAC3B,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAMzBC,CAAiBrB,EAAM1G,OAAOsF,gBAAgB3F,KAAI,SAAAgI,GAAG,OACnD,4BACGA,EAAIhI,KAAI,SAAAU,GAAI,OAAI,wBAAI2G,MAAM,aAAaF,QACtC,kBAAM5G,QAAQC,UACXgB,MAAK,kBAAMuF,EAAMsB,YACdtB,EAAMsB,YAAY3H,EAAKwB,UACvB6E,EAAM1G,OAAO0F,KAAKrF,EAAKwB,aAC1BjB,MAAME,SACRT,EAAKmB,KANS,IAMFkF,EAAM1G,OAAOuF,oBAAsBlF,EAAKwB,SAAW,eAAO,GACvE,yBAAKmF,MAAM,WAAW3G,EAAKqB,uBCX/BuG,G,MAAKhE,EAAa,KAAM5E,EAAmB0C,IAE3CmG,EAAgB,SAAC,GAAD,IAAG5H,EAAH,EAAGA,QAAS6H,EAAZ,EAAYA,aAAZ,OACpB7H,GAAW,yBAAK0G,MAAM,kBACnB1G,EAAQX,KAAI,SAAAe,GAAM,OACjB,yBAAKsG,MAAM,gBAAgBF,QAAS,kBAAMpG,EAAOC,SAASQ,KAAKgH,KAAgBzH,EAAOc,WAwC7E4G,MAnCf,WAAgB,IAAD,EACaC,IAAMC,SAAS,GAD5B,mBACNC,EADM,KACCC,EADD,OAEKH,IAAMC,SAAS,GAFpB,mBAEHG,GAFG,aAGyBJ,IAAMC,SAAS,MAHxC,mBAGN7D,EAHM,KAGOiE,EAHP,OAI6BL,IAAMC,SAAS,MAJ5C,mBAINK,EAJM,KAISC,EAJT,KAKPC,EAAW,SAAAlH,GAAI,OAAK8C,GAAeA,IAAgB9C,EACrD,SAAAjB,GAAM,OAAIuH,EAAG3B,YAAY3E,EAAMjB,IAC/B,MAYJ,OAVAoI,qBAAU,WACRb,EAAGzC,QAAO,kBAAMgD,GAAS,SAAAO,GAAC,OAAIA,EAAI,QAElCd,EAAGjD,YAAW,SAAAgE,GAAU,IAAD,EACmBA,GAAS,GAD5B,IACbrH,YADa,MACN,KADM,MACArB,eADA,MACU,KADV,EAErBoI,EAAe/G,GACfiH,EAAiBtI,QAElB,IAGD,yBAAK0G,MAAM,WACT,sCAAYuB,EAAZ,IAAoB9D,EAAW,iBAAaA,GAAgB,IAC5D,kBAAC,EAAD,CAAenE,QAASqI,EAAeR,aAAc,kBAAMM,GAAK,SAAAzE,GAAC,OAAIA,EAAE,QACvE,yBAAKgD,MAAM,cACT,kBAAC,EAAD,CAAOhH,OAAQiI,EAAID,YAAaa,EAASxF,KACzC,kBAAC,EAAD,CAAarD,OAAQiI,EAAIlB,aAAc8B,EAASxF,MAElD,yBAAK2D,MAAM,eACT,kBAACiC,EAAD,CAAc9B,SAAU0B,EAASxF,KACjC,kBAAC,EAAD,CAAa8D,SAAU0B,EAASxF,QCpCpB6F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1I,MAAK,SAAA2I,GACjCA,EAAaC,iB","file":"static/js/main.661904d8.chunk.js","sourcesContent":["const foodTypes = ['sushi', 'noodles', 'tea'];\r\n\r\nconst chooseRandomFood = () => foodTypes[Math.floor(Math.random() * 3)];\r\n\r\nexport const createOrder = (id, min = 2, max = 6) => {\r\n    const itemCount = Math.floor(Math.random() * (max - 1)) + min;\r\n\r\n    return Array.from(new Array(itemCount), chooseRandomFood).reduce((result, foodType) => {\r\n        if (!result.foods[foodType]) {\r\n            result.foods[foodType] = 0;\r\n        }\r\n\r\n        result.foods[foodType] += 1;\r\n\r\n        return result;\r\n    }, { id, foods: {}, points: 2* (itemCount -1) - 1, money: Math.min(itemCount - 1, 4) });\r\n};\r\n\r\nconst createOrdersLine = (n = 3) => {\r\n  const orders = Array.from(new Array(3), (_, i) => createOrder(i));\r\n\r\n  return {\r\n    currentOrders() { \r\n      return [...orders].filter(o => o);\r\n    },\r\n    discardOrder(id) {\r\n      delete orders[id];\r\n      orders[orders.length] = createOrder(orders.length);\r\n    },\r\n  };\r\n};\r\n\r\nexport default createOrdersLine;\r\n\r\nexport const defaultOrdersLine = createOrdersLine();\r\n\r\nexport const playerHasFoodForOrder = (playerFoods, order) => Object.entries(order.foods)\r\n.map(([foodType, amount]) => playerFoods[foodType] >= amount)\r\n.every(hasFoodType => hasFoodType === true);\r\n","import { defaultOrdersLine, playerHasFoodForOrder } from './orders';\r\n\r\nconst gainFood = foodType => (player, numberOfMeeples = 1) => {\r\n  return Promise.resolve(player.gainFood(foodType, numberOfMeeples));\r\n};\r\n\r\nconst multipleChoice = async (tile, player, options) => { \r\n  return player.selectAction(options.map(option => ({\r\n    ...option, action() { return option.action().catch(error => {\r\n        alert(error);\r\n        return tile.activate(player);\r\n      });}\r\n    })\r\n  ));\r\n}\r\n\r\nconst gainSelectedFoodExcept = (forbiddenFood, tile, player, numberOfMeeples = 1) => {\r\n  return player.selectFood(false)\r\n    .then(({ foodType, amount }) => {\r\n      if (foodType === forbiddenFood) {\r\n        alert(`Cannot make ${forbiddenFood} here`);\r\n        return tile.activate(player, numberOfMeeples);\r\n      }\r\n      return player.gainFood(foodType, numberOfMeeples);\r\n    });\r\n};\r\n\r\nconst sellAFood = (player, numberOfMeeples = 1) => player.selectFood().then(({ foodType, amount }) => (\r\n  player.loseFood(foodType, amount)\r\n    .then(() => player.gainMoney(amount * numberOfMeeples))\r\n));\r\n\r\nexport const emptyTile = {\r\n  icon: '',\r\n  title: '',\r\n  description: '',\r\n  type: 0,\r\n  cost: 0,\r\n  position: 'x',\r\n  activate(playerState, numberOfMeeples) { },\r\n};\r\n\r\nexport const fancyTiles = [\r\n  {\r\n    icon: '🍵 / 🍜',\r\n    title: 'Tea or Noodles',\r\n    description: 'make either tea or noodles',\r\n    type: 1,\r\n    cost: 3,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return gainSelectedFoodExcept('sushi', this, player, numberOfMeeples);\r\n    },\r\n  },\r\n  {\r\n    icon: '🍵 / 🍣',\r\n    title: 'Tea or Sushi',\r\n    description: 'make either tea or sushi',\r\n    type: 1,\r\n    cost: 3,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return gainSelectedFoodExcept('noodles', this, player, numberOfMeeples);\r\n    },\r\n  },\r\n  {\r\n    icon: '🍣 / 🍜',\r\n    title: 'Sushi or Noodles',\r\n    description: 'make either sushi or noodles',\r\n    type: 1,\r\n    cost: 3,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return gainSelectedFoodExcept('tea', this, player, numberOfMeeples);\r\n    },\r\n  },\r\n  {\r\n    icon: '🥡🥡',\r\n    title: 'Sell 2 food',\r\n    description: 'sell 2 food',\r\n    type: 2,\r\n    cost: 4,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return sellAFood(player, numberOfMeeples)\r\n        .then(() => sellAFood(player, numberOfMeeples))\r\n        .catch((error) => {\r\n          return this.activate(player);\r\n        });\r\n    },\r\n  },\r\n  {\r\n    icon: '🛠️ / 👩‍🍳',\r\n    title: '',\r\n    description: '',\r\n    type: 2,\r\n    cost: 5,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return multipleChoice(this, player, [\r\n        { icon: '🛠️', action() { return baseTiles[5].activate(player) } },\r\n        { icon: '👩‍🍳', action() { return baseTiles[4].activate(player) } },\r\n      ]);\r\n    },\r\n  },\r\n  {\r\n    icon: '🛠️🧩',\r\n    title: '',\r\n    description: '',\r\n    type: 3,\r\n    cost: 6,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return baseTiles[5].activate(player)\r\n        .catch((error) => { alert(error); })\r\n        .then(() => baseTiles[7].activate(player))\r\n    },\r\n  },\r\n  {\r\n    icon: '🥡🛠️',\r\n    title: '',\r\n    description: '',\r\n    type: 3,\r\n    cost: 6,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return baseTiles[3].activate(player)\r\n        .catch((error) => { alert(error); })\r\n        .then(() => baseTiles[5].activate(player))\r\n    },\r\n  },\r\n  {\r\n    icon: '🥡 / 🍽️',\r\n    title: 'Sell or Dine',\r\n    description: 'discard food for money or fulfil an order',\r\n    type: 3,\r\n    cost: 7,\r\n    activate(player, numberOfMeeples = 1) {\r\n      return multipleChoice(this, player, [\r\n        { icon: '🍽️', action() { return baseTiles[6].activate(player) } },\r\n        { icon: '🥡', action() { return baseTiles[3].activate(player) } },\r\n      ]);\r\n    },\r\n  },\r\n  {\r\n    icon: '🍣🍜🍵',\r\n    title: '',\r\n    description: '',\r\n    type: 3,\r\n    cost: 9,\r\n    async activate(player, numberOfMeeples = 1) {\r\n      gainFood('sushi')(player);\r\n      gainFood('noodles')(player);\r\n      gainFood('tea')(player);\r\n    },\r\n  },\r\n];\r\n\r\nconst baseTiles = [\r\n  {\r\n    icon: '🍣',\r\n    title: 'Sushi',\r\n    description: 'Cook some sushi',\r\n    type: 0,\r\n    cost: 0,\r\n    activate: gainFood('sushi'),\r\n  },\r\n  {\r\n    icon: '🍜',\r\n    title: 'Noodles',\r\n    description: 'Cook some noodles',\r\n    type: 0,\r\n    cost: 0,\r\n    activate: gainFood('noodles'),\r\n  },\r\n  {\r\n    icon: '🍵',\r\n    title: 'Tea',\r\n    description: 'Produce some tea',\r\n    type: 0,\r\n    cost: 0,\r\n    activate: gainFood('tea'),\r\n  },\r\n  {\r\n    icon: '🥡',\r\n    title: 'Takeout',\r\n    description: 'Sell food for money',\r\n    type: 0,\r\n    cost: 0,\r\n    async activate(player, numberOfMeeples = 1) {\r\n      if (!player.hasAnyFood()) { throw new Error('no food to sell'); }\r\n\r\n      return player.selectFood().then(({ foodType, amount }) => (\r\n        player.loseFood(foodType, amount)\r\n          .then(() => player.gainMoney(amount * numberOfMeeples))\r\n          .catch((error) => {\r\n            alert(error);\r\n            return this.activate(player);\r\n          })\r\n      ));\r\n    },\r\n  },\r\n  {\r\n    icon: '👩‍🍳',\r\n    title: 'Hire',\r\n    description: 'Hire a worker (new meeple)',\r\n    type: 0,\r\n    cost: 0,\r\n    async activate(player, numberOfMeeples) {\r\n      alert('hire');\r\n      return true;\r\n    },\r\n  },\r\n  {\r\n    icon: '🛠️',\r\n    title: 'Improve',\r\n    description: 'Improve your restaurant (buy tiles)',\r\n    type: 0,\r\n    cost: 0,\r\n    async activate(player, numberOfMeeples) {\r\n      const canBuyATile = fancyTiles\r\n        .map(tile => player.currentMoney() >= tile.cost)\r\n        .some(canBuy => canBuy === true);\r\n\r\n      if (!canBuyATile) {\r\n        throw new Error('cannot afford any tiles');\r\n      }\r\n\r\n      return player.selectTile()\r\n        .then(tile => player.loseMoney(tile.cost)\r\n          .then(\r\n            () => player.placeTile(tile),\r\n            (error) => {\r\n            alert(error);\r\n            return this.activate(player);\r\n          })\r\n        )\r\n    },\r\n  },\r\n  {\r\n    icon: '🍽️',\r\n    title: 'Dining',\r\n    description: 'Fulfil an order',\r\n    type: 0,\r\n    cost: 0,\r\n    async activate(player, numberOfMeeples = 1) {\r\n      const hasValidOptions = defaultOrdersLine.currentOrders()\r\n      .map(order => playerHasFoodForOrder(player.currentFood(), order))\r\n      .some(canFulfil => canFulfil === true);\r\n    \r\n      if (!hasValidOptions) { throw new Error('Cannot fulfil any orders right now'); }\r\n\r\n      return player.selectOrder()\r\n        .then(selectedOrder => player.fulfilOrder(selectedOrder), alert)\r\n        .catch((error) => {\r\n          alert(error);\r\n          return this.activate(player);\r\n      });\r\n    }\r\n  },\r\n  {\r\n    icon: '🧩',\r\n    name: 'Rearrange',\r\n    text: 'Rearrange tiles on your board',\r\n    type: 0,\r\n    cost: 0,\r\n    async activate(player, numberOfMeeples) {\r\n      return player.selectPosition()\r\n        .then(firstPosition => player.selectPosition()\r\n          .then(secondPosition => player.swapTiles(firstPosition, secondPosition)));\r\n    },\r\n  },\r\n];\r\n\r\nexport default baseTiles;","import baseTiles, { emptyTile } from './tiles';\r\n\r\nimport { playerHasFoodForOrder} from './orders';\r\n\r\nexport const SELECTING_OPTIONS = {\r\n  food: 'food',\r\n  tile: 'tile',\r\n  position: 'position',\r\n  order: 'order',\r\n  action: 'action',\r\n};\r\n\r\nconst generateRandomSequence = (n = 8) => {\r\n  const allValues = Array.from(new Array(n), (_, i) => i);\r\n  const result = [];\r\n\r\n  for (let i = 0; i < n; i += 1) {\r\n    const selectedIndex = Math.floor(Math.random() * allValues.length);\r\n    const selected = allValues.splice(selectedIndex, 1)[0];\r\n    result.push(selected);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst randomizeBoard = () => {\r\n  const sequence = generateRandomSequence(baseTiles.length);\r\n  const board = sequence.map((i, j) => ({ ...baseTiles[i], position: j }));\r\n  board.x = emptyTile;\r\n  return board;\r\n};\r\n\r\nconst createPlayer = (name, ordersLine, tileMarket) => {\r\n  const board = randomizeBoard();\r\n  const modifiers = {};\r\n  const foods = { sushi: 0, noodles: 0, tea: 0 };\r\n  let totalFood = 0;\r\n  let position = 0;\r\n  let money = 0;\r\n  let points = 0;\r\n  let isSelecting = null;\r\n  let setState = () => {};\r\n  let notifyOnMove = () => {};\r\n  let resolveSelect = null;\r\n  const initiateSelect = (type, options) => new Promise((resolve, reject) => {\r\n    isSelecting = type;\r\n    setState({ type, options });\r\n    resolveSelect = (value) => {\r\n      isSelecting = null;\r\n      resolveSelect = null;\r\n      setState(null);\r\n      return resolve(value);\r\n    };\r\n  });\r\n\r\n  return {\r\n    onSetState(setter) {\r\n      setState = setter;\r\n    },\r\n    gainMoney(amount) { money += amount; },\r\n    async loseMoney(amount) {\r\n      if (money < amount) { throw new Error('Not enough money'); }\r\n\r\n      money -= amount;\r\n    },\r\n    gainPoints(amount) { points += amount; },\r\n    gainFood(type, amount, callModifiers = true) {\r\n      if (!foods[type]) {\r\n        foods[type] = 0;\r\n      }\r\n\r\n      if (callModifiers && modifiers['gainFood']) {\r\n        modifiers.gainFood.call(this, type, amount);\r\n      }\r\n\r\n      foods[type] += amount;\r\n      totalFood += amount;\r\n    },\r\n    async loseFood(type, amount) {\r\n      if (!foods[type] || foods[type] < amount) {\r\n        throw new Error(`Not enough ${type}`);\r\n      }\r\n\r\n      foods[type] -= amount;\r\n      totalFood -= amount;\r\n    },\r\n    hasAnyFood() {\r\n      return totalFood > 0;\r\n    },\r\n    selectFood() {\r\n      return initiateSelect(SELECTING_OPTIONS.food);\r\n    },\r\n    currentMoney() {\r\n      return money;\r\n    },\r\n    currentScore() {\r\n      return points;\r\n    },\r\n    currentFood() {\r\n      return {...foods};\r\n    },\r\n    currentBoard() {\r\n      return board;\r\n    },\r\n    currentPosition() {\r\n      return position;\r\n    },\r\n    onMove(cb) {\r\n      notifyOnMove = cb;\r\n    },\r\n    move(target) {\r\n      if (isSelecting) throw new Error(`select ${isSelecting} first`);\r\n\r\n      const validForSmall = position < 6 && (position < target && target - position <= 2);\r\n      const validForSix = position === 6 && (target === 7 || target === 0);\r\n      const validForSeven = position === 7 && (target === 0 || target === 1);\r\n      \r\n      if (validForSmall || validForSix || validForSeven) {\r\n        position = target;\r\n        return Promise.resolve()\r\n          .then(() => board[target].activate(this))\r\n          .finally(notifyOnMove);\r\n      }\r\n\r\n      throw new Error('Illigal move');\r\n    },\r\n    async selectOrder() {\r\n      return initiateSelect(SELECTING_OPTIONS.order);\r\n    },\r\n    async fulfilOrder(selectedOrder) {\r\n      const foodItems = Object.entries(selectedOrder.foods);\r\n      \r\n      if (!playerHasFoodForOrder(foods, selectedOrder)) {\r\n        isSelecting = null;\r\n        throw new Error('Cannot fulfil order');\r\n      }\r\n\r\n      foodItems.forEach(([type, amount]) => {\r\n        this.loseFood(type, amount);\r\n      });\r\n\r\n      ordersLine.discardOrder(selectedOrder.id);\r\n      this.gainPoints(selectedOrder.points);\r\n      this.gainMoney(selectedOrder.money);\r\n      isSelecting = null;\r\n    },\r\n    async selectPosition() {\r\n      return initiateSelect(SELECTING_OPTIONS.position).then(position => {\r\n        if (position === 'x') { throw new Error('cannot select the centeral square'); }\r\n        return position;\r\n      });\r\n    },\r\n    async swapTiles(position1, position2) {\r\n      const t1 = board[position1];\r\n      const t2 = board[position2];\r\n\r\n      t1.position = position2;\r\n      t2.position = position1;\r\n\r\n      board[position1] = t2;\r\n      board[position2] = t1;\r\n    },\r\n    async selectTile() {\r\n      return initiateSelect(SELECTING_OPTIONS.tile);\r\n    },\r\n    async placeTile(selectedTile) {\r\n      return initiateSelect(SELECTING_OPTIONS.position)\r\n        .then((selectedPosition) => {\r\n          board[selectedPosition] = { ...selectedTile, position: selectedPosition };  \r\n          setState(undefined); // force update board;\r\n        })\r\n    },\r\n    uiSelection(type, option) {\r\n      return resolveSelect(option);\r\n    },\r\n    selectAction(options) {\r\n      return initiateSelect(SELECTING_OPTIONS.action, options);\r\n    }\r\n  };\r\n};\r\n\r\nexport default createPlayer;","import React from 'react';\r\n\r\nexport const stats = {\r\n  money: { symbol: '💸' },\r\n  points: { symbol: '⭐' },\r\n  sushi: { symbol: '🍣', type: 'food' },\r\n  noodles: { symbol: '🍜', type: 'food' },\r\n  tea: { symbol: '🍵', type: 'food' },\r\n};\r\n\r\nconst PlayerStats = (props) => {\r\n  const playerStats = Object.entries({\r\n    money: props.player.currentMoney(),\r\n    points: props.player.currentScore(),\r\n    ...props.player.currentFood(),\r\n  }).reduce((result, [statName, value]) => {\r\n    if (!result[value]) {\r\n      result[value] = [];\r\n    }\r\n    \r\n    const statElement = stats[statName].type === 'food'\r\n      ? <div onClick={() => props.onSelectFood && props.onSelectFood({ foodType: statName, amount: 1 })}>{stats[statName].symbol}</div>\r\n      : <div>{stats[statName].symbol}</div>\r\n\r\n    result[value].push(statElement);\r\n\r\n    return result;\r\n  }, Array.from(new Array(11)));\r\n\r\n  return <table class=\"player-stats\">\r\n    <tr>\r\n      {Object.keys(playerStats).map(i => <td>{playerStats[i] || []}</td>)}\r\n    </tr>\r\n    <tr>\r\n      {Object.keys(playerStats).map(i => <td>{i}</td>)}\r\n    </tr>\r\n  </table>\r\n};\r\n\r\nexport default PlayerStats;","import React from 'react';\r\nimport { defaultOrdersLine } from './orders';\r\nimport { stats } from './PlayerStats';\r\n\r\nconst Order = ({ id, foods, points, onSelect, money }) => (\r\n  <div class=\"order\" onClick={() => onSelect && onSelect({ id, foods, points, money })}>\r\n    {Object.entries(foods).map(([type, amount]) => <span>{amount} {stats[type].symbol}</span>)}\r\n    <hr/>\r\n    <div>{points} {stats.points.symbol}  {money} {stats.money.symbol}</div>\r\n  </div>\r\n);\r\n\r\nconst Orders = ({ onSelect }) => (\r\n  <div>\r\n    {defaultOrdersLine.currentOrders().map(o => <Order { ...o} onSelect={onSelect} />)}\r\n  </div>\r\n);\r\n\r\nexport default Orders;\r\n\r\nexport {defaultOrdersLine};","import React, { useEffect } from 'react';\r\nimport { fancyTiles } from './tiles';\r\n\r\nconst makeGrid = () => fancyTiles.reduce((result, tile, index) => {\r\n  const bucket = tile.type || 1;\r\n  if (!result[bucket]) {\r\n    result[bucket] = [];\r\n  }\r\n\r\n  result[bucket].push(tile);\r\n  return result;\r\n}, []);\r\n\r\nconst MarketTile = ({ icon, cost, description,  onSelect, ...tileProps }) => (\r\n  <td class=\"market-tile\" onClick={() => onSelect && onSelect({ icon, cost, ...tileProps })}>\r\n    {icon}<hr/><div>cost: {cost}💸</div><div class=\"tooltip\">{description}</div>\r\n  </td>\r\n);\r\n\r\nconst TilesMarket = ({ onSelect }) => (<table className=\"tiles-market small-font\">\r\n  {makeGrid().map(row => <tr>\r\n    {row.map(fT => <MarketTile {...fT} onSelect={onSelect} />)}\r\n  </tr>\r\n  )}\r\n</table>);\r\n\r\nexport default TilesMarket;\r\nexport { fancyTiles };","import React, { useEffect } from 'react';\r\n\r\nconst orderTilesInGrid = (tiles) => ([\r\n  [tiles[0], tiles[1], tiles[2]], \r\n  [tiles[7], tiles.x,  tiles[3]],\r\n  [tiles[6], tiles[5], tiles[4]],\r\n]);\r\n\r\nconst Board = (props) => (\r\n  <table class=\"player-board\">\r\n  {\r\n    orderTilesInGrid(props.player.currentBoard()).map(row => (\r\n      <tr>\r\n        {row.map(tile => <td class=\"board-tile\" onClick={\r\n          () => Promise.resolve()\r\n            .then(() => props.onPlaceTile\r\n              ? props.onPlaceTile(tile.position)\r\n              : props.player.move(tile.position))\r\n            .catch(alert)\r\n        }>{tile.icon} {props.player.currentPosition() === tile.position ? '♟️' : ''}\r\n          <div class=\"tooltip\">{tile.description}</div>\r\n        </td>)}\r\n      </tr>\r\n    ))\r\n  }\r\n  </table>\r\n);\r\n\r\nexport default Board;","import React, { useEffect } from 'react';\nimport createPlayer, { SELECTING_OPTIONS } from './player';\nimport OrdersMarket, { defaultOrdersLine } from './OrdersMarket';\nimport TilesMarket, { fancyTiles } from './TilesMarket';\nimport Board from './Board';\nimport PlayerStats from './PlayerStats';\n\nimport './App.css';\n\nconst p1 = createPlayer('p1', defaultOrdersLine, fancyTiles);\n\nconst ActionOptions = ({ options, forceRefresh }) => (\n  options && <div class=\"action-options\">\n    {options.map(option => (\n      <div class=\"action-option\" onClick={() => option.action().then(forceRefresh)}>{option.icon}</div>\n    ))}\n  </div>\n);\n\nfunction App() {\n  const [turns, setTurns] = React.useState(0);\n  const [x, setX] = React.useState(0);\n  const [isSelecting, setIsSelecting] = React.useState(null);\n  const [actionOptions, setActionOptions] = React.useState(null); \n  const selector = type => (isSelecting && isSelecting === type)\n    ? option => p1.uiSelection(type, option) \n    : null;\n\n  useEffect(() => {\n    p1.onMove(() => setTurns(t => t + 1));\n\n    p1.onSetState(state => {\n      const { type = null, options = null } = state || {};\n      setIsSelecting(type);\n      setActionOptions(options);\n    });\n  }, []);\n\n  return (\n    <div class=\"wrapper\">\n      <div>Turn: {turns} {isSelecting ? `Select ${isSelecting}` : ''}</div>\n      <ActionOptions options={actionOptions} forceRefresh={() => setX(x => x+1)} />\n      <div class=\"float-left\">\n        <Board player={p1} onPlaceTile={selector(SELECTING_OPTIONS.position)} />\n        <PlayerStats player={p1} onSelectFood={selector(SELECTING_OPTIONS.food)} />\n      </div>\n      <div class=\"float-right\">\n        <OrdersMarket onSelect={selector(SELECTING_OPTIONS.order)} />\n        <TilesMarket onSelect={selector(SELECTING_OPTIONS.tile)} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}